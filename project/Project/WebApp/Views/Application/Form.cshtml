@model ApplicationForm

<h1>Přihláška</h1>
<div class="Form">
    @using (Html.BeginForm()) {
        <div class="FormCol">
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Login)
                @Html.TextBoxFor(x => x.Login)
                @Html.ValidationMessageFor(x => x.Login)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.FirstName)
                @Html.TextBoxFor(x => x.FirstName)
                @Html.ValidationMessageFor(x => x.FirstName)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.LastName)
                @Html.TextBoxFor(x => x.LastName)
                @Html.ValidationMessageFor(x => x.LastName)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Phone)
                @Html.TextBoxFor(x => x.Phone)
                @Html.ValidationMessageFor(x => x.Phone)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Email)
                @Html.TextBoxFor(x => x.Email)
                @Html.ValidationMessageFor(x => x.Email)
            </div>
        </div>
        <div class="FormCol">

            <div class="FormCol-item">
                @Html.LabelFor(x => x.Country)
                @Html.TextBoxFor(x => x.Country)
                @Html.ValidationMessageFor(x => x.Country)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Province)
                @Html.TextBoxFor(x => x.Province)
                @Html.ValidationMessageFor(x => x.Province)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Street)
                @Html.TextBoxFor(x => x.Street)
                @Html.ValidationMessageFor(x => x.Street)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.City)
                @Html.TextBoxFor(x => x.City)
                @Html.ValidationMessageFor(x => x.City)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.BuildingNumber)
                @Html.TextBoxFor(x => x.BuildingNumber)
                @Html.ValidationMessageFor(x => x.BuildingNumber)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.ApartamentNumber)
                @Html.TextBoxFor(x => x.ApartamentNumber)
                @Html.ValidationMessageFor(x => x.ApartamentNumber)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.DateOfBirth)
                @Html.TextBoxFor(model => model.DateOfBirth,
                    new { type = "date" })
                @Html.ValidationMessageFor(x => x.DateOfBirth)
            </div>
        </div>

        <div class="FormCol SearchItem">
            <div class="FormCol-item">
                @Html.LabelFor(x => x.SchoolSearchTerm)
                <p class="FormCol-itemExplainer">Můžete si vybrat až 3 studijní programy</p>
                @Html.TextBoxFor(model => model.SchoolSearchTerm)
                @Html.ValidationMessageFor(x => x.SchoolSearchTerm)
            </div>
            <ul class="SearchItem-results" data-attr="SearchItem-results">

            </ul>
        </div>
        <button class="Form-submit" type="submit">Podat přihlášku</button>
    }
</div>

@section Scripts {
    <script>
        const successfulGet = (result) => {
           const searchResultsEl = document.querySelector('[data-attr="SearchItem-results"]');
            const results = [];
           for (const res of result) {
                const el = document.createElement('li');
                el.classList.add('SearchItem-resultsItem');
                el.innerHTML = `${res['studyProgramCode']} - ${res['summary']}, ${res['school']['schoolName']}`;
                results.push(el);
           }

            for (const res of results) {
                searchResultsEl.appendChild(res);
            }
        }
        const failGet = (request,  status,  error) => {
            console.log(status);
        }


        $('#SchoolSearchTerm').keyup(() => {
           $.ajax({
                type: "GET",
                url: "@Url.Action("GetStudyProgram", "StudyProgram")",
                dataType: "json",
                data: {
                    value: `%${$('#SchoolSearchTerm').val()}%`
                },
                success: successfulGet,
                error: failGet
            });
        });
    
    </script>
}