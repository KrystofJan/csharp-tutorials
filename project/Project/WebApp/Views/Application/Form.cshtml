@using System.Diagnostics
@using Models
@model ApplicationForm

<h2>Přihláška</h2>
@if (ViewBag.ShowForm) {
    <div class="Form">
    @using (Html.BeginForm()) {
        <div class="FormCol">
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Login)
                @Html.TextBoxFor(x => x.Login)
                @Html.ValidationMessageFor(x => x.Login)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.FirstName)
                @Html.TextBoxFor(x => x.FirstName)
                @Html.ValidationMessageFor(x => x.FirstName)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.LastName)
                @Html.TextBoxFor(x => x.LastName)
                @Html.ValidationMessageFor(x => x.LastName)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Phone)
                @Html.TextBoxFor(x => x.Phone)
                @Html.ValidationMessageFor(x => x.Phone)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Email)
                @Html.TextBoxFor(x => x.Email)
                @Html.ValidationMessageFor(x => x.Email)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.DateOfBirth)
                @Html.TextBoxFor(model => model.DateOfBirth,
                new { type = "date" })
                @Html.ValidationMessageFor(x => x.DateOfBirth)
            </div>
        </div>
        <div class="FormCol">
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Country)
                @Html.TextBoxFor(x => x.Country)
                @Html.ValidationMessageFor(x => x.Country)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Province)
                @Html.TextBoxFor(x => x.Province)
                @Html.ValidationMessageFor(x => x.Province)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.Street)
                @Html.TextBoxFor(x => x.Street)
                @Html.ValidationMessageFor(x => x.Street)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.City)
                @Html.TextBoxFor(x => x.City)
                @Html.ValidationMessageFor(x => x.City)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.BuildingNumber)
                @Html.TextBoxFor(x => x.BuildingNumber)
                @Html.ValidationMessageFor(x => x.BuildingNumber)
            </div>
            <div class="FormCol-item">
                @Html.LabelFor(x => x.ApartamentNumber)
                @Html.TextBoxFor(x => x.ApartamentNumber)
                @Html.ValidationMessageFor(x => x.ApartamentNumber)
            </div>


            <div class="FormCol-item">
                @Html.LabelFor(x => x.PostalCode)
                @Html.TextBoxFor(model => model.PostalCode)
                @Html.ValidationMessageFor(x => x.PostalCode)
            </div>
        </div>

        <div class="FormCol SearchItem">
            <div class="FormCol-item">
                @Html.LabelFor(x => x.SchoolSearchTerm)
                <p class="FormCol-itemExplainer">Můžete si vybrat až 3 studijní programy</p>
                @Html.TextBoxFor(model => model.SchoolSearchTerm)
            </div>
            <ul class="SearchItem-results no-content" data-attr="SearchItem-results">

            </ul>
        </div>

        <div class="FoundSchoolPrograms mainPrograms">
        @Html.ValidationMessageFor(x => x.PrimaryProgramId)
        <div class="FoundSchoolPrograms-wrapper mainPrograms">
            @{ string AttrName = ""; }
            @for (int i = 0; i < ViewBag.StudyPrograms.Count; ++i) {
                @switch (i) {
                    case 0:
                        AttrName = "PrimaryProgramId";
                        break;
                    case 1:
                        AttrName = "SecondaryProgramId";
                        break;
                    case 2:
                        AttrName = "TertiaryProgramId";
                        break;
                }
                @Html.Hidden(AttrName, ViewBag.StudyPrograms[i].StudyProgramId, null)

                <div class="FoundSchoolPrograms-item">
                    <div class="FoundSchoolPrograms-itemSection ">
                        <span class="FoundSchoolPrograms-label">Kód oboru: </span>
                        <span class="FoundSchoolPrograms-content">@ViewBag.StudyPrograms[i].StudyProgramCode</span>
                    </div>

                    <div class="FoundSchoolPrograms-itemSection ">
                        <span class="FoundSchoolPrograms-label">Název oboru: </span>
                        <span class="FoundSchoolPrograms-content">@ViewBag.StudyPrograms[i].Summary</span>
                    </div>

                    <div class="FoundSchoolPrograms-itemSection ">
                        <span class="FoundSchoolPrograms-label">Název školy: </span>
                        <span class="FoundSchoolPrograms-content">@ViewBag.StudyPrograms[i].School.SchoolName</span>
                    </div>

                    <div class="FoundSchoolPrograms-itemSection ">
                        <span class="FoundSchoolPrograms-label">Kapacita (současná / max.): </span>
                        <span class="FoundSchoolPrograms-content">@ViewBag.StudyPrograms[i].CurrentCapacity / @ViewBag.StudyPrograms[i].MaximumCapacity</span>
                    </div>

                    <div onclick="removeToSelected(@ViewBag.StudyPrograms[i].StudyProgramId)" class="FoundSchoolPrograms-itemSection item-closer" study-prog-id="@ViewBag.StudyPrograms[i].StudyProgramId">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 384 512" fill="none">
                            <path fill="currentColor" d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"/>
                        </svg>
                    </div>
                </div>
            }
        </div>
    </div>
        <button class="Form-submit" type="submit">Podat přihlášku</button>
    }
</div>
}
else {
    <div class="Success">Váše přihláška byla vytvořena pod ID: @ViewBag.ApplicationId</div>
}
@section Scripts {
    <script>
        //$('.FoundSchoolPrograms-item').each((index) => {
          //  $(this).on('click', () => {
            //    const id = this.getAttribute('study-prog-id');
              //  addToSelected(id);
            //})
        //});
        let mouseIsOver = false;
        
        const removeToSelected = (studyProgram) => {
            $.ajax({
                type: "Post",
                url: "@Url.Action("RemoveFromList", "Application")",
                dataType: "json",
                data: {
                    studyProgramId: parseInt(studyProgram)
                },
                success: successAdd,
                error: failAdd
            });
        }

        const successAdd = (result) => {
            $('.FoundSchoolPrograms').load(location.href + ' .FoundSchoolPrograms-wrapper');
        } 
        
        const failAdd = (request,  status,  error) => {
            console.log(status);
            console.log(error);
            console.log(request);
        }
        
        const addToSelected = (id) => {
            $.ajax({
                type: "POST",
                url: "@Url.Action("AddToList", "Application")",
                dataType: "json",
                data: {
                    id: parseInt(id) 
                },
                success: successAdd,
                error: failAdd
            });
        }
        
        const successfulGet = (result) => {
            const searchResultsEl = document.querySelector('[data-attr="SearchItem-results"]');
            searchResultsEl.innerHTML = '';
          
            const results = [];

            for (const res of result) {
                const el = document.createElement('li');
                el.classList.add('SearchItem-resultsItem');
                el.setAttribute('study-prog-id', res['studyProgramId']);
                el.innerHTML = `${res['studyProgramCode']} - ${res['summary']}, ${res['school']['schoolName']}`;
                el.addEventListener('click', () => {
                   const id = res['studyProgramId'];
                   addToSelected(id);
                }) 
                results.push(el);
           }

            for (const res of results) {
                searchResultsEl.appendChild(res);
            }
            
            if (results.length <= 0) {
                const el = document.createElement('li');
                el.classList.add('SearchItem-resultsItem');
                el.classList.add('not-found');
                el.innerHTML = 'Nanašli jsme shodující kód, či název oboru nebo školy'
                searchResultsEl.appendChild(el);
            } 
            searchResultsEl.classList.remove('no-content')
        }
        
        const failGet = (request,  status,  error) => {
            const searchResultsEl = document.querySelector('[data-attr="SearchItem-results"]');
            searchResultsEl.innerHTML = '';
            
            const el = document.createElement('li');
            el.classList.add('SearchItem-resultsItem');
            el.classList.add('has-error');
            el.innerHTML = "Nastala chyba v hledání výsledků";
            searchResultsEl.appendChild(el);
            
        }
        const findByKey = () => {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetStudyProgram", "StudyProgram")",
                dataType: "json",
                data: {
                    value: `%${$('#SchoolSearchTerm').val()}%`
                },
                success: successfulGet,
                error: failGet
            });
        }

        $('#SchoolSearchTerm').keyup(() => {
            findByKey();
        });

        $('#SchoolSearchTerm').focus( () => {
            findByKey();
        });

        $('.SearchItem-results').mouseleave(() => {
            mouseIsOver = false;
        });

        $('.SearchItem-results').mouseover(() => {
            mouseIsOver = true;
        });

        $('body').click(() => {
            if (!mouseIsOver) {
                const searchResultsEl = document.querySelector('[data-attr="SearchItem-results"]');
                const term = document.querySelector('#SchoolSearchTerm');
                if (document.activeElement !== term) {
                    searchResultsEl.classList.add('no-content');
                }
            }
        })
    </script>
}